---
- name: Aptos Installer
  hosts: aptos

  tasks:
    - name: Install required packages
      become: yes
      apt:
        update_cache: yes
        name:
          - git
          - ed
          - jq

    - name: Check if Aptos is installed
      stat:
        path: /etc/systemd/system/aptos.service
      register: aptos_installed

    - name: Stop Aptos
      when: aptos_installed.stat.exists
      become: yes
      systemd:
        state: stopped
        name: aptos

    - name: Clone Aptos
      git:
        repo: 'https://github.com/aptos-labs/aptos-core.git'
        dest: ~/aptos-core

    - name: Run dev-setup script
      shell: 'cd ~/aptos-core/ && ./scripts/dev_setup.sh -b -v'

    - name: Checkout to devnet branch
      shell: 'cd ~/aptos-core/ && git checkout origin/devnet'

    - name: Install Keys
      copy:
        src: "keys/{{ key_folder }}/private-key"
        dest: "~/aptos-core/private-key"

    - name: Extract Identity from Key
      shell: "source ~/.cargo/env && cd ~/aptos-core && cargo run -p aptos-operational-tool --release -- extract-peer-from-file --encoding hex --key-file ~/aptos-core/private-key --output-file ~/aptos-core/peer-info.yaml"
      args:
        executable: /bin/bash

    - name: Copy public_full_node
      copy:
        src: ~/aptos-core/config/src/config/test_data/public_full_node.yaml
        dest: ~/aptos-core/public_full_node.yaml
        remote_src: yes

    - name: Download genesis
      get_url:
        url: 'https://devnet.aptoslabs.com/genesis.blob'
        dest: ~/aptos-core/genesis.blob
        force: yes

    - name: Download waypoint
      get_url:
        url: 'https://devnet.aptoslabs.com/waypoint.txt'
        dest: ~/aptos-core/waypoint.txt
        force: yes

    - name: Remove DataDir
      file:
        path: "~/aptos-data"
        state: "absent"

    - name: Patch datadir
      replace:
        path: ~/aptos-core/public_full_node.yaml
        regexp: '(\s*data_dir:).*$'
        replace: '\1 "HOME/aptos-data"'

    - name: Patch genesis
      replace:
        path: ~/aptos-core/public_full_node.yaml
        regexp: '(\s*genesis_file_location:).*$'
        replace: '\1 "HOME/aptos-core/genesis.blob"'

    - name: Patch HOME
      replace:
        path: ~/aptos-core/public_full_node.yaml
        regexp: 'HOME'
        replace: "{{ ansible_facts['env']['HOME'] }}"

    - name: Paste waypoint file
      shell: 'DATA=$(cat ~/aptos-core/waypoint.txt); sed -i -e "s/0:01234567890ABCDEFFEDCA098765421001234567890ABCDEFFEDCA0987654210/$DATA/" ~/aptos-core/public_full_node.yaml'

    - name: Install Identity Patcher
      copy:
        src: patch_public_full_node_config.sh
        dest: ~/aptos-core/patch_public_full_node_config.sh
        force: yes
        mode: '0755'

    - name: Install Restart-on-Network-Restart script
      tags:
        - rnr
      copy:
        src: restart_on_network_restart.sh
        dest: ~/aptos-core/restart_on_network_restart.sh
        force: yes
        mode: '0755'

    - name: Add restart-no-network-restart to cron
      tags:
        - rnr
      cron:
        name: "Check version and restart if needed"
        minute: "0"
        hour: "*"
        job: "/root/aptos-core/restart_on_network_restart.sh >> /tmp/restart_on_network_restart.log 2>&1"

    - name: Patch config with identity
      shell: "cd ~/aptos-core && ./patch_public_full_node_config.sh"

    - name: Build node
      shell: 'source ~/.cargo/env && cd ~/aptos-core && cargo build -p aptos-node --release'
      args:
        executable: /bin/bash
        # creates: ~/aptos-core/target/release/aptos-node

    - name: Render service file
      template:
        src: aptos.service
        dest: /etc/systemd/system/aptos.service
      become: yes

    - name: Start aptos service
      become: yes
      systemd:
        state: restarted
        enabled: yes
        daemon_reload: yes
        name: aptos
